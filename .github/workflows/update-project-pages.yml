name: Update Project Pages
on: workflow_dispatch

jobs:
  update-pages:
    runs-on: ubuntu-latest
    env:
      # List of project; Format: owner/repo:path/to/homepage
      PROJECTS: |
        obsidian7673/odin-recipes:.
        obsidian7673/odin-landing-page:.
        obsidian7673/odin-rock-paper-scissors:.
        obsidian7673/odin-sketch-pad:.

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Git config
        run: |
          set -euo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch and copy each project
        run: |
          set -euo pipefail
          UPDATED=""

          mkdir -p docs

          IFS=$'\n'
          for entry in $PROJECTS; do
            REPO="${entry%%:*}"
            OUTPUT="${entry##*:}"
            NAME=$(basename "$REPO")

            echo "::group::Syncing $NAME"
            echo "Cloning $REPO…"
            git clone --depth=1 "https://github.com/${REPO}.git" "temp-$NAME" || {
              echo "Error: failed to clone $REPO"
              exit 1
            }
            
            mkdir -p "docs-staging/$NAME"
            rsync -a --delete \
              --exclude='.git' \
              --exclude='.github' \
              --exclude='README.md' \
              "temp-$NAME/$OUTPUT/" "docs-staging/$NAME/" || {
                echo "Error: rsync failed for $NAME"
                exit 1
              }
            
            if diff -qr "docs/$NAME" "docs-staging/$NAME" >/dev/null; then
              echo "No changes detected in $NAME — skipping update"
              rm -rf "temp-$NAME" "docs-staging/$NAME"
              continue
            fi
            
            echo "Updating docs/$NAME"
            rm -rf "docs/$NAME"
            mv "docs-staging/$NAME" "docs/$NAME"
            rm -rf "temp-$NAME"
            UPDATED+="$NAME "

            echo "::endgroup::"
          done

          echo "UPDATED=$(echo "$UPDATED" | xargs)" >> $GITHUB_ENV

      - name: Commit & push per-project
        run: |
          set -euo pipefail
          for name in $UPDATED; do
            if [ -d "docs/$name" ]; then
              git add "docs/$name" || true
      
              if git diff --cached --quiet; then
                echo "No changes detected for $name; skipping commit."
                git reset "docs/$name"
                continue
              fi
      
              git commit -m "Updated $name [auto]"
              git push
            fi
          done
