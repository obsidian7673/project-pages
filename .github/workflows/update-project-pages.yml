name: Update Project Pages
on: workflow_dispatch

jobs:
  update-pages:
    runs-on: ubuntu-latest
    env:
      # List of project; Format: owner/repo:path/to/homepage
      PROJECTS: |
        obsidian7673/odin-recipes:.
        obsidian7673/odin-landing-page:.

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Git config
        run: |
          set -euo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch and copy each project
        run: |
          set -euo pipefail
          export UPDATED=""

          IFS=$'\n'
          for entry in $PROJECTS; do
            REPO="${entry%%:*}"
            OUTPUT="${entry##*:}"
            NAME=$(basename "$REPO")

            echo "::group::Syncing $NAME"
            echo "Cloning $REPOâ€¦"
            git clone --depth=1 "https://github.com/${REPO}.git" "temp-$NAME" || {
              echo "Error: failed to clone $REPO"
              exit 1
            }

            echo "Removing old folder: $NAME"
            rm -rf "$NAME"

            echo "Copying files from temp-$NAME/$OUTPUT to ./$NAME"
            mkdir -p "$NAME"
            # add files or patterns to exclude below
            rsync -a \
              --exclude='.git' \
              --exclude='.github' \
              --exclude='README.md' \
              "temp-$NAME/$OUTPUT/" "./$NAME/" || {
                echo "Error: rsync failed for $NAME"
                exit 1
              }

            echo "Cleaning up temp directory"
            rm -rf "temp-$NAME"

            UPDATED+="$NAME "
            echo "::endgroup::"
          done

          echo "Projects updated: $UPDATED"

      - name: Commit & push changes
        run: |
          set -euo pipefail
          git add .

          if git diff --cached --quiet; then
            echo "No changes detected; skipping commit."
            exit 0
          fi

          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "Update projects: $UPDATED [auto @ $TIMESTAMP]"
          git push
